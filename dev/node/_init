#!/usr/bin/env zsh
source ${0:A:h}/../../deploy
source env.bash

# TODO Install latest stable node version to be set as global
install() {
  # Installing node through Homebrew can cause problems with npm for globally
  # installed packages. To prevent this issue install node without npm
  [[ $(_os) == macos ]] && brew install node --without-npm
}

link() {
  # NOTE plugins extend the commands available for `nodenv`
  local NODENV_PLUGINS=$NODENV_ROOT/plugins

  _ensure_repo nodenv/nodenv                  $NODENV_ROOT

  # allow me to install virtually any version of Node
  _ensure_repo nodenv/node-build              $NODENV_PLUGINS/node-build

  # automatically install npm packages every time you install a new version of Node
  _ensure_repo nodenv/nodenv-default-packages $NODENV_PLUGINS/nodenv-default-packages

  # installer/updater and doctor scripts for nodenv
  _ensure_repo nodenv/nodenv-installer        $NODENV_PLUGINS/nodenv-installer

  # never run `nodenv rehash` again
  _ensure_repo nodenv/nodenv-package-rehash   $NODENV_PLUGINS/nodenv-package-rehash

  # detects the Node version based on the engines field of the current tree's package.json file
  _ensure_repo nodenv/nodenv-package-json-engine $NODENV_PLUGINS/nodenv-package-json-engine

  # List of default packages that will be installed on every new version of Node
  mklink default-packages "$NODENV_ROOT/default-packages"
  mklink prettierrc.js "$HOME/.prettierrc.js"
}

update() {
  if [[ -n $NODENV_ROOT ]]; then
    cd $NODENV_ROOT && git pull
    for ver in $NODENV_ROOT/plugins/*(/); do
      cd $ver && git pull
    done
  fi

  nodenv default-packages install
}

clean() {
  rm -rfv $NODENV_ROOT "$HOME/.prettierrc.js"
}

init "$@"
